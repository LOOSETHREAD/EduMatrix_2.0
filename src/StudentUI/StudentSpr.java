/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package StudentUI;

import static Data.Controller.PopulateTable.populateCourseTable;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author User
 */
public class StudentSpr extends javax.swing.JPanel {

    /**
     * Creates new form StudentSpr
     */
    public StudentSpr(JLabel studentIDLabel) {
        initComponents();
        
        FlatLightLaf.setup();
        String studentID = studentIDLabel.getText(); // Get the student ID from the JLabel
        populateCourseTable(sprTable, studentID);
//        customizeTable();
        centerDataTable();
    }
    private void centerDataTable(){
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        for (int i = 0; i < sprTable.getColumnModel().getColumnCount(); i++) {
            sprTable.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }

        // Center the header text
        DefaultTableCellRenderer headerRenderer = (DefaultTableCellRenderer) sprTable.getTableHeader().getDefaultRenderer();
        headerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
    }
     private void customizeTable() {
        // Disable row and column selection
        sprTable.setRowSelectionAllowed(false);
        sprTable.setColumnSelectionAllowed(false);
        sprTable.setCellSelectionEnabled(false);

        // Disable keyboard focus
        sprTable.setFocusable(false);

        // Remove focus border by overriding the renderer
        sprTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(
                JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column
            ) {
                Component component = super.getTableCellRendererComponent(
                    table, value, false, false, row, column
                );

                // Ensure no focus border is displayed
                setBorder(null);
                return component;
            }
        });

        // Prevent reordering of columns
        sprTable.getTableHeader().setReorderingAllowed(false);

        // Set the default cursor
        sprTable.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        sprTable = new javax.swing.JTable();

        sprTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Course Code", "Course Name", "Grade", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sprTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sprTable.setRowHeight(50);
        jScrollPane1.setViewportView(sprTable);
        if (sprTable.getColumnModel().getColumnCount() > 0) {
            sprTable.getColumnModel().getColumn(0).setMinWidth(180);
            sprTable.getColumnModel().getColumn(0).setPreferredWidth(180);
            sprTable.getColumnModel().getColumn(0).setMaxWidth(180);
            sprTable.getColumnModel().getColumn(1).setResizable(false);
            sprTable.getColumnModel().getColumn(2).setMinWidth(100);
            sprTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            sprTable.getColumnModel().getColumn(2).setMaxWidth(100);
            sprTable.getColumnModel().getColumn(3).setMinWidth(150);
            sprTable.getColumnModel().getColumn(3).setPreferredWidth(150);
            sprTable.getColumnModel().getColumn(3).setMaxWidth(150);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable sprTable;
    // End of variables declaration//GEN-END:variables
}
